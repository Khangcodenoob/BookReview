#!/usr/bin/env python3
"""
Script ƒë∆°n gi·∫£n ƒë·ªÉ c·∫≠p nh·∫≠t h√¨nh ·∫£nh b√¨a s√°ch
"""

import os
import sqlite3
import requests
import time
from typing import Optional

# ƒê∆∞·ªùng d·∫´n database
BASE_DIR = os.path.dirname(os.path.dirname(__file__))
DB_PATH = os.path.join(BASE_DIR, "books.db")
UPLOADS_DIR = os.path.join(BASE_DIR, "static", "uploads")

def ensure_uploads_dir():
    """ƒê·∫£m b·∫£o th∆∞ m·ª•c uploads t·ªìn t·∫°i"""
    try:
        os.makedirs(UPLOADS_DIR, exist_ok=True)
    except Exception:
        pass

def download_image(url: str, filename: str) -> bool:
    """T·∫£i h√¨nh ·∫£nh t·ª´ URL v√† l∆∞u v√†o th∆∞ m·ª•c uploads"""
    try:
        response = requests.get(url, timeout=15, headers={
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        })
        if response.status_code == 200 and len(response.content) > 1000:  # ƒê·∫£m b·∫£o c√≥ n·ªôi dung
            filepath = os.path.join(UPLOADS_DIR, filename)
            with open(filepath, 'wb') as f:
                f.write(response.content)
            return True
    except Exception as e:
        print(f"L·ªói t·∫£i h√¨nh ·∫£nh {url}: {e}")
    return False

def get_db_connection():
    """T·∫°o k·∫øt n·ªëi database"""
    return sqlite3.connect(DB_PATH)

def update_book_covers():
    """C·∫≠p nh·∫≠t h√¨nh ·∫£nh b√¨a s√°ch"""
    
    # H√¨nh ·∫£nh placeholder ƒë·∫πp theo th·ªÉ lo·∫°i
    genre_covers = {
        "Ti·ªÉu thuy·∫øt": "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=300&h=400&fit=crop&crop=center",
        "Kinh t·∫ø": "https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=300&h=400&fit=crop&crop=center",
        "Khoa h·ªçc": "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=300&h=400&fit=crop&crop=center",
        "T√¢m l√Ω": "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=300&h=400&fit=crop&crop=center",
        "VƒÉn h·ªçc": "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=300&h=400&fit=crop&crop=center",
        "L·ªãch s·ª≠": "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=300&h=400&fit=crop&crop=center",
        "Thi·∫øu nhi": "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=300&h=400&fit=crop&crop=center",
        "Kh√°c": "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=300&h=400&fit=crop&crop=center"
    }
    
    try:
        ensure_uploads_dir()
        db = get_db_connection()
        
        # L·∫•y t·∫•t c·∫£ s√°ch t·ª´ database
        cursor = db.execute("SELECT id, title, genre, cover_url FROM books")
        books = cursor.fetchall()
        
        updated_count = 0
        
        for book_id, title, genre, current_cover in books:
            # B·ªè qua n·∫øu ƒë√£ c√≥ h√¨nh ·∫£nh th·ª±c
            if current_cover and current_cover != "/static/placeholder.jpg" and "uploads" in current_cover:
                print(f"‚è≠Ô∏è B·ªè qua (ƒë√£ c√≥ h√¨nh): {title}")
                continue
                
            # L·∫•y URL h√¨nh ·∫£nh theo th·ªÉ lo·∫°i
            cover_url = genre_covers.get(genre, genre_covers["Kh√°c"])
            
            # T·∫°o t√™n file
            safe_title = "".join(c for c in title if c.isalnum() or c in (' ', '-', '_')).rstrip()
            filename = f"{book_id}_{safe_title.replace(' ', '_')[:20]}.jpg"
            
            # T·∫£i h√¨nh ·∫£nh
            print(f"üîÑ ƒêang t·∫£i h√¨nh ·∫£nh cho: {title} ({genre})")
            if download_image(cover_url, filename):
                # C·∫≠p nh·∫≠t database
                new_cover_url = f"/static/uploads/{filename}"
                db.execute("UPDATE books SET cover_url = ? WHERE id = ?", (new_cover_url, book_id))
                updated_count += 1
                print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t: {title}")
            else:
                # S·ª≠ d·ª•ng placeholder m·∫∑c ƒë·ªãnh
                db.execute("UPDATE books SET cover_url = ? WHERE id = ?", ("/static/placeholder.jpg", book_id))
                print(f"‚ö†Ô∏è S·ª≠ d·ª•ng placeholder cho: {title}")
            
            # Ngh·ªâ m·ªôt ch√∫t ƒë·ªÉ tr√°nh spam
            time.sleep(1)
        
        db.commit()
        print(f"\nüéâ Ho√†n th√†nh! ƒê√£ c·∫≠p nh·∫≠t {updated_count} h√¨nh ·∫£nh b√¨a s√°ch.")
        
        # Th·ªëng k√™
        cursor = db.execute("SELECT COUNT(*) FROM books WHERE cover_url LIKE '/static/uploads/%'")
        books_with_covers = cursor.fetchone()[0]
        cursor = db.execute("SELECT COUNT(*) FROM books")
        total_books = cursor.fetchone()[0]
        
        print(f"üìä Th·ªëng k√™:")
        print(f"   - T·ªïng s·ªë s√°ch: {total_books}")
        print(f"   - S√°ch c√≥ h√¨nh ·∫£nh t·∫£i v·ªÅ: {books_with_covers}")
        print(f"   - S√°ch d√πng placeholder: {total_books - books_with_covers}")
        
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
    finally:
        if 'db' in locals():
            db.close()

if __name__ == "__main__":
    print("üöÄ B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t h√¨nh ·∫£nh b√¨a s√°ch...")
    update_book_covers()
    print("‚ú® Ho√†n th√†nh!")

